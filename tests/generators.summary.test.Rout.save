
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require(FrF2)
Loading required package: FrF2
Loading required package: BsMD
Loading required package: scatterplot3d
Loading required package: igraph
Loading required package: sfsmisc
Loading required package: DoE.base
Loading required package: relimp
Loading Tcl/Tk interface ... done
Loading required package: tcltk
Loading required package: vcd
Loading required package: MASS
Loading required package: grid
Loading required package: colorspace

Attaching package: 'DoE.base'

The following object(s) are masked from 'package:relimp':

    showData

The following object(s) are masked from 'package:stats':

    aov, lm

The following object(s) are masked from 'package:graphics':

    plot.design

The following object(s) are masked from 'package:utils':

    fix


Attaching package: 'FrF2'

The following object(s) are masked from 'package:BsMD':

    DanielPlot

> 
> summary(FrF2(16,7),brief=TRUE)
Call:
FrF2(16, 7)

Experimental design of type  FrF2 
16  runs

Factor settings (scale ends):
   A  B  C  D  E  F  G
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=A B=B C=C D=D E=E F=F G=G

$generators
[1] E=ABC F=ABD G=ACD


Alias structure:
$fi2
[1] AB=CE=DF AC=BE=DG AD=BF=CG AE=BC=FG AF=BD=EG AG=CD=EF BG=CF=DE

> summary(FrF2(32,7,blocks=4),brief=TRUE)
Call:
FrF2(32, 7, blocks = 4)

Experimental design of type  FrF2.blocked 
32  runs

blocked design with  4  blocks of size  8 
Factor settings (scale ends):
   A  B  C  D  E  F  G
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=A B=B C=C D=D E=E F=F G=G

$`generators for design itself`
[1] F=ABC G=ABD

$`block generators`
[1] ACD ABE


Alias structure:
[[1]]
[1] A:B C:F D:G

[[2]]
[1] C:D F:G

[[3]]
[1] C:G D:F

[[4]]
[1] A:D B:G

[[5]]
[1] A:C B:F

[[6]]
[1] A:G B:D

[[7]]
[1] A:F B:C

Aliased with block main effects:
[1] none
> summary(FrF2(32,9,blocks=4,alias.block.2fis=TRUE),brief=TRUE)
Call:
FrF2(32, 9, blocks = 4, alias.block.2fis = TRUE)

Experimental design of type  FrF2.blocked 
32  runs

blocked design with  4  blocks of size  8 
Factor settings (scale ends):
   A  B  C  D  E  F  G  H  J
1 -1 -1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=A B=B C=C D=D E=E F=F G=G H=H J=J

$`generators for design itself`
[1] F=ABC  G=ABD  H=ABE  J=ACDE

$`block generators`
[1] AB AC


Alias structure:
[[1]]
[1] G:H D:E

[[2]]
[1] D:H E:G

[[3]]
[1] A:D B:G

[[4]]
[1] A:E B:H

[[5]]
[1] A:G B:D

[[6]]
[1] A:H B:E

[[7]]
[1] C:D F:G

[[8]]
[1] C:E F:H

[[9]]
[1] C:G D:F

[[10]]
[1] C:H E:F

Aliased with block main effects:
[1] A:C B:F A:B C:F D:G E:H A:F B:C
> summary(FrF2(32,9,blocks=c("AB","AC"),alias.block.2fis=TRUE),brief=TRUE)
Call:
FrF2(32, 9, blocks = c("AB", "AC"), alias.block.2fis = TRUE)

Experimental design of type  FrF2.blocked 
32  runs

blocked design with  4  blocks of size  8 
Factor settings (scale ends):
   A  B  C  D  E  F  G  H  J
1 -1 -1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=A B=B C=C D=D E=E F=F G=G H=H J=J

$`generators for design itself`
[1] F=ABC  G=ABD  H=ABE  J=ACDE

$`block generators`
[1] AB AC


Alias structure:
[[1]]
[1] G:H D:E

[[2]]
[1] D:H E:G

[[3]]
[1] A:D B:G

[[4]]
[1] A:E B:H

[[5]]
[1] A:G B:D

[[6]]
[1] A:H B:E

[[7]]
[1] C:D F:G

[[8]]
[1] C:E F:H

[[9]]
[1] C:G D:F

[[10]]
[1] C:H E:F

Aliased with block main effects:
[1] A:C B:F A:B C:F D:G E:H A:F B:C
> summary(FrF2(64,7,blocks=4),brief=TRUE)
Call:
FrF2(64, 7, blocks = 4)

Experimental design of type  FrF2.blocked 
64  runs

blocked design with  4  blocks of size  16 
Factor settings (scale ends):
   A  B  C  D  E  F  G
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=A B=B C=C D=D E=E F=F G=G

$`generators for design itself`
[1] G=ABCDEF

$`block generators`
[1] ABC ADE


no aliasing of main effects or 2fis among experimental factors

Aliased with block main effects:
[1] none
> summary(plan1 <- FrF2(32,7,estimable=c("AB","CD")),brief=TRUE)
Call:
FrF2(32, 7, estimable = c("AB", "CD"))

Experimental design of type  FrF2.estimable 
32  runs

Factor settings (scale ends):
   A  B  C  D  E  F  G
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=A B=B C=C D=D E=E F=F G=G

$generators
[1] F=ACE  G=ACBD


Alias structure:
$fi2
[1] AC=EF AE=CF AF=CE

> summary(plan2 <- FrF2(nruns= 64 ,nfactors= 10 , estimable= c( "AB","AC","AD","AE","AF",
+        "AG","AH","AJ","AK","BC","BD","BE","BF","BG","BH","BJ","BK" ) ), brief=TRUE)
Call:
FrF2(nruns = 64, nfactors = 10, estimable = c("AB", "AC", "AD", 
    "AE", "AF", "AG", "AH", "AJ", "AK", "BC", "BD", "BE", "BF", 
    "BG", "BH", "BJ", "BK"))

Experimental design of type  FrF2.estimable 
64  runs

Factor settings (scale ends):
   A  B  C  D  E  F  G  H  J  K
1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1  1  1  1

Design generating information:
$legend
 [1] A=A B=B C=C D=D E=E F=F G=G H=H J=J K=K

$generators
[1] B=CEFG H=CDE  J=CDAF K=CDAG


Alias structure:
$fi2
[1] CD=EH CE=DH CH=DE FG=JK FJ=GK FK=GJ

> 
> C1 <- compromise(10, 1:2, msg=FALSE)
> summary(plan3 <- FrF2(nruns= 64 ,nfactors= 10 , 
+     estimable= C1$requirement, perms=C1$perms.full, clear=FALSE ), brief=TRUE)
Call:
FrF2(nruns = 64, nfactors = 10, estimable = C1$requirement, perms = C1$perms.full, 
    clear = FALSE)

Experimental design of type  FrF2.estimable 
64  runs

Factor settings (scale ends):
   A  B  C  D  E  F  G  H  J  K
1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1  1  1  1

Design generating information:
$legend
 [1] A=A B=B C=C D=D E=E F=F G=G H=H J=J K=K

$generators
[1] G=ACD  H=ACBE J=ACBF K=ADEF


Alias structure:
$fi2
[1] AC=DG AD=CG AG=CD EF=HJ EH=FJ EJ=FH

> 
> ### blockpick.big, a design that uses map
> plan <- FrF2(64,15,blocks=16,alias.block.2fi=TRUE)
> summary(plan,brief=TRUE)
Call:
FrF2(64, 15, blocks = 16, alias.block.2fi = TRUE)

Experimental design of type  FrF2.blocked 
64  runs

blocked design with  16  blocks of size  4 
Factor settings (scale ends):
   A  B  C  D  E  F  G  H  J  K  L  M  N  O  P
1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1

Design generating information:
$legend
 [1] A=A B=B C=C D=D E=E F=F G=G H=H J=J K=K L=L M=M N=N O=O P=P

$`generators for design itself`
 [1] C=b1AB      D=b2AB      E=b1b2A     F=b1b2B     G=b3AB      H=b1b3A    
 [7] J=b2b3A     K=b4AB      L=b1b4A     M=b2b4B     N=b3b4A     O=b3b4B    
[13] P=b1b2b3b4A

$`block generators`
[1] b1=A b2=B b3=C b4=D


Alias structure:
[[1]]
[1] B:K D:M G:O

[[2]]
[1] A:K C:L G:N

[[3]]
[1] B:L E:M H:O

[[4]]
[1] A:M F:L J:O

[[5]]
[1] C:M F:K

[[6]]
[1] D:L E:K G:P

[[7]]
[1] A:O B:N F:P J:M

[[8]]
[1] D:O G:M

[[9]]
[1] A:B E:F N:O

[[10]]
[1] B:C D:F

[[11]]
[1] A:D C:E G:J

[[12]]
[1] B:G K:O

[[13]]
[1] A:G C:H D:J K:N

[[14]]
[1] B:H F:J L:O M:P

[[15]]
[1] B:J F:H M:N

[[16]]
[1] C:J D:H E:G K:P

[[17]]
[1] B:D C:F K:M

[[18]]
[1] C:P D:N J:K

[[19]]
[1] A:F B:E L:M O:P

[[20]]
[1] A:C D:E G:H K:L

[[21]]
[1] B:P E:O F:N H:M

[[22]]
[1] C:N D:P G:L H:K

Aliased with block main effects:
 [1] A:N B:O E:P G:K H:L B:M D:K E:L H:P J:N A:J D:G E:H L:P M:O A:L C:K F:M H:N
[20] J:P A:H C:G E:J L:N A:E B:F C:D H:J N:P A:P E:N F:O J:L
> 
> ### various split-plot setups
> planfull <-FrF2(32,5,WPs=4,nfac.WP=2,factor.names=Letters[21:25])
> summary(planfull, brief=TRUE)
Call:
FrF2(32, 5, WPs = 4, nfac.WP = 2, factor.names = Letters[21:25])

Experimental design of type  FrF2.splitplot 
32  runs

Factor settings (scale ends):
   V  W  X  Y  Z
1 -1 -1 -1 -1 -1
2  1  1  1  1  1

Design generating information:
$legend
[1] A=V B=W C=X D=Y E=Z

$generators
[1] full factorial


no aliasing of main effects or 2fis among experimental factors


split-plot design:  4  whole plots
                 : first  2  factors are whole plot factors
> design.info(planfull)
$type
[1] "FrF2.splitplot"

$nruns
[1] 32

$nfactors
[1] 5

$nfac.WP
[1] 2

$nfac.SP
[1] 3

$factor.names
$factor.names$V
[1] -1  1

$factor.names$W
[1] -1  1

$factor.names$X
[1] -1  1

$factor.names$Y
[1] -1  1

$factor.names$Z
[1] -1  1


$nWPs
[1] 4

$plotsize
[1] 8

$res.WP
[1] Inf

$aliased
$aliased$legend
[1] "A=V" "B=W" "C=X" "D=Y" "E=Z"


$FrF2.version
[1] "1.2-3"

$base.design
[1] "generator columns: "

$map
[1] 1 2 3 4 5

$orig.fac.order
[1] 1 2 3 4 5

$replications
[1] 1

$repeat.only
[1] FALSE

$randomize
[1] TRUE

$seed
NULL

$creator
FrF2(32, 5, WPs = 4, nfac.WP = 2, factor.names = Letters[21:25])

> try(planfull <-FrF2(32,5,WPs=4,nfac.WP=3,factor.names=Letters[21:25]))
Error in FrF2(32, 5, WPs = 4, nfac.WP = 3, factor.names = Letters[21:25]) : 
  3 whole plot factors cannot be accomodated in 4 whole plots for a full factorial. Please request smaller design with replication instead.
> 
> plan0 <-FrF2(32,7,gen=c(6,15),WPs=4,WPfacs=c("B","C","F"),factor.names=Letters[19:25])
> summary(plan0,brief=TRUE)
Call:
FrF2(32, 7, gen = c(6, 15), WPs = 4, WPfacs = c("B", "C", "F"), 
    factor.names = Letters[19:25])

Experimental design of type  FrF2.splitplot 
32  runs

Factor settings (scale ends):
   U  V  Y  T  W  X  Z
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=U B=V C=Y D=T E=W F=X G=Z

$generators
[1] C=AB   G=ABDE


Alias structure:
[[1]]
[1] U   V:Y

[[2]]
[1] V   U:Y

[[3]]
[1] Y   U:V

[[4]]
[1] Y:T W:Z

[[5]]
[1] Y:W T:Z

[[6]]
[1] Y:Z T:W


split-plot design:  4  whole plots
                 : first  3  factors are whole plot factors
> design.info(plan0)
$type
[1] "FrF2.splitplot"

$nruns
[1] 32

$nfactors
[1] 7

$nfac.WP
[1] 3

$nfac.SP
[1] 4

$factor.names
$factor.names$U
[1] -1  1

$factor.names$V
[1] -1  1

$factor.names$Y
[1] -1  1

$factor.names$T
[1] -1  1

$factor.names$W
[1] -1  1

$factor.names$X
[1] -1  1

$factor.names$Z
[1] -1  1


$nWPs
[1] 4

$plotsize
[1] 8

$res.WP
NULL

$aliased
$aliased$legend
[1] "A=U" "B=V" "C=Y" "D=T" "E=W" "F=X" "G=Z"

$aliased[[2]]
[1] "U"   "V:Y"

$aliased[[3]]
[1] "V"   "U:Y"

$aliased[[4]]
[1] "Y"   "U:V"

$aliased[[5]]
[1] "Y:T" "W:Z"

$aliased[[6]]
[1] "Y:W" "T:Z"

$aliased[[7]]
[1] "Y:Z" "T:W"


$FrF2.version
[1] "1.2-3"

$base.design
[1] "generator columns: 6, 15"

$map
[1] 1 2 3 4 5

$orig.fac.order
[1] 2 3 6 1 4 5 7

$replications
[1] 1

$repeat.only
[1] FALSE

$randomize
[1] TRUE

$seed
NULL

$creator
FrF2(32, 7, gen = c(6, 15), WPs = 4, WPfacs = c("B", "C", "F"), 
    factor.names = Letters[19:25])

> 
> plan <-FrF2(32,7,WPs=4,nfac.WP=3,factor.names=Letters[19:25])
> summary(plan, brief=TRUE)
Call:
FrF2(32, 7, WPs = 4, nfac.WP = 3, factor.names = Letters[19:25])

Experimental design of type  FrF2.splitplot 
32  runs

Factor settings (scale ends):
   T  U  V  W  X  Y  Z
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=T B=U C=V D=W E=X F=Y G=Z

$generators
[1] C=AB   G=ADEF


Alias structure:
[[1]]
[1] T   U:V

[[2]]
[1] U   T:V

[[3]]
[1] V   T:U


split-plot design:  4  whole plots
                 : first  3  factors are whole plot factors
> generators(plan)
$generators
[1] "C=AB"   "G=ADEF"

> design.info(plan)
$type
[1] "FrF2.splitplot"

$nruns
[1] 32

$nfactors
[1] 7

$nfac.WP
[1] 3

$nfac.SP
[1] 4

$factor.names
$factor.names$T
[1] -1  1

$factor.names$U
[1] -1  1

$factor.names$V
[1] -1  1

$factor.names$W
[1] -1  1

$factor.names$X
[1] -1  1

$factor.names$Y
[1] -1  1

$factor.names$Z
[1] -1  1


$nWPs
[1] 4

$plotsize
[1] 8

$res.WP
[1] 3

$aliased
$aliased$legend
[1] "A=T" "B=U" "C=V" "D=W" "E=X" "F=Y" "G=Z"

$aliased[[2]]
[1] "T"   "U:V"

$aliased[[3]]
[1] "U"   "T:V"

$aliased[[4]]
[1] "V"   "T:U"


$FrF2.version
[1] "1.2-3"

$catlg.name
[1] "catlg"

$base.design
[1] "7-2.4"

$map
[1] 1 2 3 4 5

$orig.fac.order
[1] 1 2 6 3 4 5 7

$replications
[1] 1

$repeat.only
[1] FALSE

$randomize
[1] TRUE

$seed
NULL

$creator
FrF2(32, 7, WPs = 4, nfac.WP = 3, factor.names = Letters[19:25])

> 
> plan2 <- FrF2(32,7,gen=c(6,15),WPs=4,nfac.WP=3,WPfacs=c(2,3,6),factor.names=Letters[19:25])
> summary(plan2, brief=TRUE)
Call:
FrF2(32, 7, gen = c(6, 15), WPs = 4, nfac.WP = 3, WPfacs = c(2, 
    3, 6), factor.names = Letters[19:25])

Experimental design of type  FrF2.splitplot 
32  runs

Factor settings (scale ends):
   U  V  Y  T  W  X  Z
1 -1 -1 -1 -1 -1 -1 -1
2  1  1  1  1  1  1  1

Design generating information:
$legend
[1] A=U B=V C=Y D=T E=W F=X G=Z

$generators
[1] C=AB   G=ABDE


Alias structure:
[[1]]
[1] U   V:Y

[[2]]
[1] V   U:Y

[[3]]
[1] Y   U:V

[[4]]
[1] Y:T W:Z

[[5]]
[1] Y:W T:Z

[[6]]
[1] Y:Z T:W


split-plot design:  4  whole plots
                 : first  3  factors are whole plot factors
> generators(plan2)
$generators
[1] "C=AB"   "G=ABDE"

> design.info(plan2)
$type
[1] "FrF2.splitplot"

$nruns
[1] 32

$nfactors
[1] 7

$nfac.WP
[1] 3

$nfac.SP
[1] 4

$factor.names
$factor.names$U
[1] -1  1

$factor.names$V
[1] -1  1

$factor.names$Y
[1] -1  1

$factor.names$T
[1] -1  1

$factor.names$W
[1] -1  1

$factor.names$X
[1] -1  1

$factor.names$Z
[1] -1  1


$nWPs
[1] 4

$plotsize
[1] 8

$res.WP
NULL

$aliased
$aliased$legend
[1] "A=U" "B=V" "C=Y" "D=T" "E=W" "F=X" "G=Z"

$aliased[[2]]
[1] "U"   "V:Y"

$aliased[[3]]
[1] "V"   "U:Y"

$aliased[[4]]
[1] "Y"   "U:V"

$aliased[[5]]
[1] "Y:T" "W:Z"

$aliased[[6]]
[1] "Y:W" "T:Z"

$aliased[[7]]
[1] "Y:Z" "T:W"


$FrF2.version
[1] "1.2-3"

$base.design
[1] "generator columns: 6, 15"

$map
[1] 1 2 3 4 5

$orig.fac.order
[1] 2 3 6 1 4 5 7

$replications
[1] 1

$repeat.only
[1] FALSE

$randomize
[1] TRUE

$seed
NULL

$creator
FrF2(32, 7, gen = c(6, 15), WPs = 4, nfac.WP = 3, WPfacs = c(2, 
    3, 6), factor.names = Letters[19:25])

> 
